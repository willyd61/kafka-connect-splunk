version: 2.1

workflows:
  test:
    jobs:
      - build_test_kafka:
          kafka_version: 1.0.0
          kafka_package: kafka_2.12-1.0.0.tgz
          filters:
            branches:
              ignore:
                - /^release\/.*/
                - master
      - build_test_kafka:
          kafka_version: 2.1.0
          kafka_package: kafka_2.12-2.1.0.tgz
          filters:
            branches:
              ignore:
                - /^release\/.*/
                - master
      - build_test_kafka:
          kafka_version: 2.4.0
          kafka_package: kafka_2.12-2.4.0.tgz
          filters:
            branches:
              ignore:
                - /^release\/.*/
                - master
      - build_test_kafka:
          kafka_version: 2.6.0
          kafka_package: kafka_2.13-2.6.0.tgz
          filters:
            branches:
              ignore:
                - /^release\/.*/
                - master

jobs:
  build_test_kafka:
    working_directory: ~/repo
    executor:
      name: kafka_connect_linux
    parameters:
      kafka_version:
        description: "Kafka version"
        type: string
      kafka_package:
        description: "Kafka package name"
        type: string
    steps:
      - build_test:
          kafka_version: << parameters.kafka_version >>
          kafka_package: << parameters.kafka_package >>


commands:
  build_test:
    parameters:
      kafka_version:
        description: "Kafka version"
        type: string
      kafka_package:
        description: "Kafka package name"
        type: string
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          key: kafka-connect-splunk-{{ checksum "pom.xml" }}
      - run:
          name: Get maven dependencies
          command: mvn dependency:go-offline
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: kafka-connect-splunk-{{ checksum "pom.xml" }}
      - run:
          name: Builder
          command: mvn compile
      - run:
          name: Run Unit tests
          command: mvn package -Dsurefire.useSystemClassLoader=false -q # run the actual tests
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          path: target/surefire-reports
      - store_artifacts: # store the uberjar as an artifact
          path: target/splunk-kafka-connect-*.jar
      - run:
          name: Create file for checksum
          command: echo $CI_SPLUNK_VERSION > /tmp/splunk_version.txt
      - run:
          name: Install Splunk
          command: |
            cd /tmp && wget -O $CI_SPLUNK_FILENAME 'https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&platform=linux&version='$CI_SPLUNK_VERSION'&product=splunk&filename='$CI_SPLUNK_FILENAME'&wget=true'
            sudo dpkg -i $CI_SPLUNK_FILENAME
            # Set user seed
            hashed_pwd=$(sudo /opt/splunk/bin/splunk hash-passwd $CI_SPLUNK_PASSWORD)
            sudo tee /opt/splunk/etc/system/local/user-seed.conf > /dev/null \<< EOF
            [user_info]
            USERNAME = $CI_SPLUNK_USERNAME
            HASHED_PASSWORD = $hashed_pwd
            EOF
            # Add delete capability to admin role
            sudo tee -a /opt/splunk/etc/system/local/authorize.conf > /dev/null \<< EOF
            [role_admin]
            delete_by_keyword = enabled
            EOF
      - run:
          name: Start Splunk
          command: |
            sudo /opt/splunk/bin/splunk start --accept-license --answer-yes --no-prompt
      - run:
          name: Enable HEC services
          command: |
            curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http/http/enable
            # Create new HEC token
            curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d "name=splunk_hec_token&token=$CI_SPLUNK_HEC_TOKEN" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http
            # Enable HEC new-token
            sudo /opt/splunk/bin/splunk http-event-collector enable -name splunk_hec_token -uri https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            # Create new HEC token with ack
            curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d "name=splunk_hec_token_ack&token=$CI_SPLUNK_HEC_TOKEN_ACK&useACK=1" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/nobody/splunk_httpinput/data/inputs/http
            # Enable HEC new-token
            sudo /opt/splunk/bin/splunk http-event-collector enable -name splunk_hec_token_ack -uri https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
            # Disable SSL for HEC new-token
            #sudo /opt/splunk/bin/splunk http-event-collector update -uri https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT -enable-ssl 0 -auth $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD
      - run:
          name: Setup Indexes
          command: |
            curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d "name=$CI_INDEX_EVENTS&datatype=event" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/-/search/data/indexes
            curl -X POST -u $CI_SPLUNK_USERNAME:$CI_SPLUNK_PASSWORD -k -d "name=$CI_KAFKA_HEADER_INDEX&datatype=event" https://$CI_SPLUNK_HOST:$CI_SPLUNK_PORT/servicesNS/-/search/data/indexes
            sudo /opt/splunk/bin/splunk restart --accept-license --answer-yes --no-prompt
      - run:
          name: Install Kafka << parameters.kafka_version >>
          command: |
            cd /tmp && wget https://archive.apache.org/dist/kafka/<< parameters.kafka_version >>/<< parameters.kafka_package >>
            sudo tar xzf << parameters.kafka_package >>
            rm << parameters.kafka_package >>
            sudo mv kafka_* /usr/local/kafka
            sudo tee /etc/systemd/system/zookeeper.service > /dev/null \<< EOF
            [Unit]
            Description=Apache Zookeeper server
            Documentation=http://zookeeper.apache.org
            Requires=network.target remote-fs.target
            After=network.target remote-fs.target
            [Service]
            Type=simple
            ExecStart=/usr/local/kafka/bin/zookeeper-server-start.sh /usr/local/kafka/config/zookeeper.properties
            ExecStop=/usr/local/kafka/bin/zookeeper-server-stop.sh
            Restart=on-abnormal
            [Install]
            WantedBy=multi-user.target
            EOF

            sudo tee /etc/systemd/system/kafka.service > /dev/null \<< EOF
            [Unit]
            Description=Apache Kafka Server
            Documentation=http://kafka.apache.org/documentation.html
            Requires=zookeeper.service
            [Service]
            Type=simple
            Environment="JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
            ExecStart=/usr/local/kafka/bin/kafka-server-start.sh /usr/local/kafka/config/server.properties
            ExecStop=/usr/local/kafka/bin/kafka-server-stop.sh
            [Install]
            WantedBy=multi-user.target
            EOF
      - run:
          name: Start Kafka Server
          command: |
            sudo systemctl daemon-reload
            sudo systemctl start zookeeper
            sudo systemctl start kafka
      - run:
          name: Test kafka connect upgrade
          command: |
            echo "Download kafka connect "$CI_OLD_CONNECTOR_VERSION
            sudo mkdir -p /usr/local/share/kafka/plugins/
            wget https://github.com/splunk/kafka-connect-splunk/releases/download/$CI_OLD_CONNECTOR_VERSION/splunk-kafka-connect-$CI_OLD_CONNECTOR_VERSION.jar
            sudo cp splunk-kafka-connect-$CI_OLD_CONNECTOR_VERSION.jar /usr/local/share/kafka/plugins/
            sed -i 's/plugin\.path\=connectors\//plugin\.path\=\/usr\/local\/share\/kafka\/plugins\//' /home/circleci/repo/config/connect-distributed-quickstart.properties
            sed -i 's/key\.converter\=org\.apache\.kafka\.connect\.storage\.StringConverter/key\.converter\=org\.apache\.kafka\.connect\.json\.JsonConverter/' /home/circleci/repo/config/connect-distributed-quickstart.properties
            sed -i 's/value\.converter\=org\.apache\.kafka\.connect\.storage\.StringConverter/value\.converter\=org\.apache\.kafka\.connect\.json\.JsonConverter/' /home/circleci/repo/config/connect-distributed-quickstart.properties
            pyenv global 3.6.5
            pip install --upgrade pip
            pip install -r test/requirements.txt
            export PYTHONWARNINGS="ignore:Unverified HTTPS request"
            echo "Test kafka connect upgrade ..."
            python test/lib/connector_upgrade.py
      - run:
          name: Install kafka connect
          command: |
            sudo rm -f /usr/local/share/kafka/plugins/splunk-kafka-connect*.jar
            sudo cp /home/circleci/repo/target/splunk-kafka-connect*.jar /usr/local/share/kafka/plugins/
            test -f /usr/local/share/kafka/plugins/splunk-kafka-connect*.jar && echo /usr/local/share/kafka/plugins/splunk-kafka-connect*.jar
            sudo /usr/local/kafka/bin/connect-distributed.sh /home/circleci/repo/config/connect-distributed-quickstart.properties
          background: true
      - run:
          name: Run Functional tests
          command: |
            sleep 5
            echo "Running functional tests....."
            python -m pytest -p no:warnings -s

executors:
  kafka_connect_linux:
    resource_class: large
    machine:
      image: ubuntu-1604:201903-01
    environment:
      MINIKUBE_HOME: /home/circleci
      CI_SPLUNK_VERSION: "8.0.2.1"
      CI_SPLUNK_FILENAME: splunk-8.0.2.1-f002026bad55-linux-2.6-amd64.deb
      CI_SPLUNK_HOST: 127.0.0.1
      CI_SPLUNK_PORT: 8089
      CI_SPLUNK_USERNAME: admin
      CI_SPLUNK_HEC_TOKEN: a6b5e77f-d5f6-415a-bd43-930cecb12959
      CI_SPLUNK_HEC_TOKEN_ACK: a6b5e77f-d5f6-415a-bd43-930cecb12950
      CI_SPLUNK_PASSWORD: helloworld
      CI_INDEX_EVENTS: main
      CI_KAFKA_HEADER_INDEX: kafka
      CI_DATAGEN_IMAGE: rock1017/log-generator:latest
      CI_OLD_CONNECTOR_VERSION: v1.2.0